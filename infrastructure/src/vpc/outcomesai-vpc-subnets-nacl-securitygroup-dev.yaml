# outcomesai-vpc-subnets-nacl-securitygroup-dev.yaml

AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VpcCidr:
    Type: String
    Description: CIDR block for the VPC
    Default: 10.0.0.0/16
  Subnet1Cidr:
    Type: String
    Description: CIDR block for Subnet 1
    Default: 10.0.1.0/24
  Subnet2Cidr:
    Type: String
    Description: CIDR block for Subnet 2
    Default: 10.0.2.0/24
  Stage:
    Type: String
    Description: dev, staging, or prod
    Default: dev

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      Tags:
        - Key: Name
          Value: 'outcomesai-dev-vpc'

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Subnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: 'us-west-2a-dev-outcomesai-vpc-rds'

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref Subnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: 'us-west-2b-dev-outcomesai-vpc-rds'

  APIGatewayVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      ServiceName: !Sub 'com.amazonaws.vpce.${AWS::Region}.${AWS::URLSuffix}/${VpcEndpointId}'
      VpcId: !Ref VPC
      SubnetIds:
        - !Ref Subnet1-RDS
        - !Ref Subnet2-RDS

  VPCSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: Security group for VCP for RDS
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: 'dev-outcomesai-vpc-rds-security-group'

  NACL:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: 'dev-outcomesai-vpc-rds-nacl'

  Subnet1AclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref Subnet1
      NetworkAclId: !Ref NACL

  Subnet2AclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref Subnet2
      NetworkAclId: !Ref NACL

  NACL-InboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NACL
      RuleNumber: 100
      Protocol: 6
      PortRange:
        From: 3306
        To: 3306
      Egress: false
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: 'dev-outcomesai-rds-subnet-grpup'
      DBSubnetGroupDescription: 'Subnet group for outcomesai dev rds instance'
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2

Outputs:
  VPCId:
    Value: !Ref VPC
    Description: ID of the VPC
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-VPCId'
  Subnet1Id:
    Value: !Ref Subnet1
    Description: ID of RDS Subnet 1
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-Subnet1-Id'
  Subnet2Id:
    Value: !Ref Subnet2
    Description: ID of RDS Subnet 2
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-Subnet2-Id'
  VPCEndpoint:
    Value: !Ref DBSubnetGroup
    Description: VCP endpoint for API gateway
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-APIGatewayVpcEndpoint'
  SecurityGroupId:
    Value: !Ref VPCSecurityGroup
    Description: ID of RDS VPC Security Group
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-SecurityGroup-Id'
  SecurityGroupName:
    Value: outcomesai-SecurityGroup-dev
    Description: Name of RDS VPC Security Group
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-SecurityGroupName-RDS'
  NetworkAclId:
    Value: !Ref NACL-RDS
    Description: ID of RDS Network ACL
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-NetworkAclId'
  DBSubnetGroupName:
    Value: !Ref DBSubnetGroup
    Description: Name of RDS subnet group
    Export:
      Name:
        'Fn::Sub': '${AWS::StackName}-DBSubnetGroupName'
